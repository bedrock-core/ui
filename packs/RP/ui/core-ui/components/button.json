{
	"namespace": "core-ui_components",
	"button": {
		"type": "panel",
		// Note: from size_binding_x/y seems relative to parent size so making parent 10x10 will be 10 times larger the child
		"size": [
			1,
			1
		],
		"controls": [
			{
				"button@controlled_button": {}
			}
		]
	},
	// idk how to make it work "extending" control.json, so copy/paste it here for now
	"controlled_button@common.button": {
		"$pressed_button_name": "button.form_button_click",
		"anchor_from": "top_left",
		"anchor_to": "top_left",
		"size": [
			0,
			0
		],
		"property_bag": {
			"#size_binding_x": 0.0,
			"#size_binding_y": 0.0,
			"#anchored_offset_value_x": 0.0,
			"#anchored_offset_value_y": 0.0,
			"#rem_after_header": "test"
		},
		"use_anchored_offset": true,
		"$button_text_max_size": [
			"100%",
			20
		],
		"visible": "#visible",
		"enabled": "#enabled",
		"$normalize": 1.0,
		"$default_button_texture|default": "textures/ui/core-ui/components/button/primary/background",
		"$default_content_alpha|default": 1,
		"$hover_content_alpha|default": 1,
		"$hover_button_texture|default": "textures/ui/core-ui/components/button/primary/background_hover",
		"$pressed_button_texture|default": "textures/ui/core-ui/components/button/primary/background_pressed",
		"$locked_button_texture|default": "textures/ui/core-ui/components/button/disabled/background",
		"locked_control": "locked",
		"$default_font|default": "default",
		"$font_type": "$default_font",
		"$locked_alpha": 1,
		"$button_offset|default": [
			0,
			0
		],
		"$button_pressed_offset|default": [
			0,
			1
		],
		"$button_font_size|default": "normal",
		"$button_font_scale_factor|default": 1.0,
		"$pressed_alpha|default": 1,
		"$default_button_alpha|default": 1,
		"$default_hover_alpha|default": 1,
		"$default_pressed_alpha|default": 1,
		"$default_button_pressed_offset|default": [
			0,
			1
		],
		"$default_text_color|default": "$light_button_default_text_color",
		"$hover_text_color|default": "$light_button_hover_text_color",
		"$pressed_text_color|default": "$light_button_pressed_text_color",
		"$locked_text_color|default": "$light_button_locked_text_color",
		// For text bindings
		"$button_text_binding_type|default": "collection",
		"$button_binding_condition|default": "none",
		"$button_text_grid_collection_name|default": "form_buttons",
		"$button_type_panel": "common_buttons.new_ui_binding_button_label",
		"$button_state_panel|default": "common_buttons.new_ui_button_panel",
		// These states are for passing the button state to the button content - do not set these in a parent!
		"$default_state|default": false,
		"$hover_state|default": false,
		"$pressed_state|default": false,
		"$locked_state|default": false,
		"$button_text|default": "",
		"$button_text": "#rem_after_header",
		"bindings": [
			{
				"binding_name": "#form_button_text",
				"binding_type": "collection",
				"binding_collection_name": "form_buttons"
			},
			{
				/* --- strip protocol header (9 chars) --- */
				"binding_type": "view", // protocol header size
				"source_property_name": "('%.9s' * #form_button_text)",
				"target_property_name": "#protocol_header"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#form_button_text - #protocol_header)",
				"target_property_name": "#rem_after_header"
			},
			{
				/* --- type (string) - field 0 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.35s' * #rem_after_header)",
				"target_property_name": "#raw_type"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_header - #raw_type)",
				"target_property_name": "#rem_after_type"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "(('%.34s' * #raw_type) - ('%.2s' * #raw_type) - ';')",
				"target_property_name": "#type"
			},
			{
				/* --- width (int) - field 1 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.27s' * #rem_after_type)",
				"target_property_name": "#raw_width"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_type - #raw_width)",
				"target_property_name": "#rem_after_width"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "(('%.26s' * #raw_width) - ('%.2s' * #raw_width) - ';')",
				"target_property_name": "#size_binding_x"
			},
			{
				/* --- height (int) - field 2 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.27s' * #rem_after_width)",
				"target_property_name": "#raw_height"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_width - #raw_height)",
				"target_property_name": "#rem_after_height"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "(('%.26s' * #raw_height) - ('%.2s' * #raw_height) - ';')",
				"target_property_name": "#size_binding_y"
			},
			{
				/* --- x (int) - field 3 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.27s' * #rem_after_height)",
				"target_property_name": "#raw_x"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_height - #raw_x)",
				"target_property_name": "#rem_after_x"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "((('%.26s' * #raw_x) - ('%.2s' * #raw_x) - ';') * $normalize)",
				"target_property_name": "#anchored_offset_value_x"
			},
			{
				/* --- y (float) - field 4 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.27s' * #rem_after_x)",
				"target_property_name": "#raw_y"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_x - #raw_y)",
				"target_property_name": "#rem_after_y"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "((('%.26s' * #raw_y) - ('%.2s' * #raw_y) - ';') * $normalize)",
				"target_property_name": "#anchored_offset_value_y"
			},
			{
				/* --- visible (boolean) - field 5 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.8s' * #rem_after_y)",
				"target_property_name": "#raw_visible"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_y - #raw_visible)",
				"target_property_name": "#rem_after_visible"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width (s:) - padding_char (;)
				"source_property_name": "(('%.7s' * #raw_visible) - ('%.2s' * #raw_visible) - ';')",
				"target_property_name": "#pre_visible"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#pre_visible and (#type = 'button'))",
				"target_property_name": "#visible"
			},
			{
				/* --- enabled (boolean) - field 6 --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.8s' * #rem_after_visible)",
				"target_property_name": "#raw_enabled"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_visible - #raw_enabled)",
				"target_property_name": "#rem_after_enabled"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "(('%.7s' * #raw_enabled) - ('%.2s' * #raw_enabled) - ';')",
				"target_property_name": "#enabled"
			},
			{
				/* --- skip __reserved (274) + commented (70) --- */
				"binding_type": "view", // reserved full_width
				"source_property_name": "('%.344s' * #rem_after_enabled)",
				"target_property_name": "#skip_reserved_control"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#rem_after_enabled - #skip_reserved_control)",
				"target_property_name": "#serialized_data"
			},
			{
				/* --- label (string) --- */
				"binding_type": "view", // full_width
				"source_property_name": "('%.35s' * #serialized_data)",
				"target_property_name": "#raw_label"
			},
			{
				"binding_type": "view",
				"source_property_name": "(#serialized_data - #raw_label)",
				"target_property_name": "#rem_after_label"
			},
			{
				"binding_type": "view", // (full_width - marker_width) - prefix_width - padding_char (;)
				"source_property_name": "(('%.34s' * #raw_label) - ('%.2s' * #raw_label) - ';')",
				"target_property_name": "#label"
			}
		],
		"controls": [
			{
				"default@$button_state_panel": {
					"$new_ui_button_texture": "$default_button_texture",
					"$text_color": "$default_text_color",
					"$secondary_text_color": "$light_button_secondary_default_text_color",
					"$content_alpha": "$default_content_alpha",
					// "$border_color": "$light_border_default_color",
					"$border_layer": 2,
					"$default_state": true,
					"$button_alpha": "$default_button_alpha",
					"layer": 1
				}
			},
			{
				"hover@$button_state_panel": {
					"$new_ui_button_texture": "$hover_button_texture",
					"$text_color": "$hover_text_color",
					"$secondary_text_color": "$light_button_secondary_hover_text_color",
					"$content_alpha": 1,
					// "$border_color": "$light_border_hover_color",
					"$border_layer": 4,
					"$hover_state": true,
					"$button_alpha": "$default_hover_alpha",
					"layer": 4 // This is several layers higher than default in case two buttons share a border and that shared border needs to turn with with either button hover/press state
				}
			},
			{
				"pressed@$button_state_panel": {
					"$new_ui_button_texture": "$pressed_button_texture",
					"$text_color": "$pressed_text_color",
					"$secondary_text_color": "$light_button_secondary_pressed_text_color",
					"$button_offset|default": "$button_pressed_offset",
					"$content_alpha": "$pressed_alpha",
					// "$border_color": "$light_border_pressed_color",
					"$border_layer": 5,
					"$pressed_state": true,
					"$button_alpha": "$default_pressed_alpha",
					"layer": 5
				}
			},
			{
				"locked@$button_state_panel": {
					"$new_ui_button_texture": "$locked_button_texture",
					"$text_color": "$locked_text_color",
					"$secondary_text_color": "$light_button_secondary_locked_text_color",
					"$content_alpha": "$locked_alpha",
					// "$border_color": "$light_border_locked_color",
					"$button_image": "common_buttons.locked_button_image",
					"$border_layer": 1,
					"$locked_state": true,
					"layer": 1
				}
			}
		]
	}
}